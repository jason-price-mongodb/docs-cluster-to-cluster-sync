.. _c2c-conn-oidc2oidc:

================================================
Connect Two Clusters that Support OpenID Connect
================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: twocols

.. include:: /includes/mongosync-and-oidc.rst

The source and destination clusters must use MongoDB 8.0 or later.

``mongosync`` supports replica sets and sharded clusters.

Examples
--------

In the :ref:`connection string <connections-connection-options>`, set
:urioption:`authMechanism` to ``MONGODB-OIDC`` and set
:urioption:`authMechanismProperties` as needed:

- For Microsoft Azure, set ``authMechanismProperties`` to
  ``ENVIRONMENT:azure``
- For Google Cloud Platform, set ``authMechanismProperties`` to
  ``ENVIRONMENT:gcp``

For more details about:

- OIDC in connections strings, see
  :ref:`connection-string-auth-options`
- Workforce Identity Federation and OIDC in Atlas, see
  :atlas:`Set up Workforce Identity Federation with OIDC
  </workforce-oidc/#std-label-oidc-authentication-workforce/>`

Connect to MongoDB Clusters Using Microsoft Azure Instance Metadata Service
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following ``mongosync`` example connects to MongoDB clusters using
Microsoft Azure Instance Metadata Service (IMDS):

.. code-block:: shell

   ./bin/mongosync \
         --logPath /var/log/mongosync \
         --cluster0 "mongodb://clusterAdmin:superSecret@clusterOne01.fancyCorp.com:20020,clusterOne02.fancyCorp.com:20020,clusterOne03.fancyCorp.com:20020/?authMechanism=MONGODB-OIDC&authMechanismProperties=ENVIRONMENT:azure" \
         --cluster1 "mongodb://clusterAdmin:superSecret@clusterTwo01.fancyCorp.com:20020,clusterTwo02.fancyCorp.com:20020,clusterTwo03.fancyCorp.com:20020/?authMechanism=MONGODB-OIDC&authMechanismProperties=ENVIRONMENT:azure"

.. _c2c-conn-oidc2oidc-azure-managed-identities-example:

Connect to MongoDB Clusters Using Microsoft Azure Managed Identities
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To connect to MongoDB clusters using Microsoft Azure Managed Identities
and federated authentication, you must define these environment
variables:

- :option:`AZURE_TENANT_ID`
- :option:`AZURE_APP_CLIENT_ID`
- :option:`AZURE_CLIENT_ID`
- :option:`AZURE_FEDERATED_TOKEN_FILE`

The following ``mongosync`` example defines the environment variables
and connects to MongoDB clusters in Microsoft Azure:

.. code-block:: shell

   AZURE_TENANT_ID=08206ab8-16a0-406d-85e4-2f15f5620fac \
   AZURE_APP_CLIENT_ID=b6c835da-e536-425b-9405-64bc471e245b \
   AZURE_CLIENT_ID=f176d4eb-7dcd-4f66-bccf-aaa316ee61fd \
   AZURE_FEDERATED_TOKEN_FILE=/var/run/secrets/azure/tokens/azure-identity-token \
   ./bin/mongosync \
         --logPath /var/log/mongosync \
         --cluster0 "mongodb://clusterAdmin:superSecret@clusterOne01.fancyCorp.com:20020,clusterOne02.fancyCorp.com:20020,clusterOne03.fancyCorp.com:20020/?authMechanism=MONGODB-OIDC&authMechanismProperties=ENVIRONMENT:azure" \
         --cluster1 "mongodb://clusterAdmin:superSecret@clusterTwo01.fancyCorp.com:20020,clusterTwo02.fancyCorp.com:20020,clusterTwo03.fancyCorp.com:20020/?authMechanism=MONGODB-OIDC&authMechanismProperties=ENVIRONMENT:azure"

Connect to MongoDB Clusters in Google Cloud Platform
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The following ``mongosync`` example connects to MongoDB clusters in
Google Cloud Platform:

.. code-block:: shell

   ./bin/mongosync \
         --logPath /var/log/mongosync \
         --cluster0 "mongodb://clusterAdmin:superSecret@clusterOne01.fancyCorp.com:20020,clusterOne02.fancyCorp.com:20020,clusterOne03.fancyCorp.com:20020/?authMechanism=MONGODB-OIDC&authMechanismProperties=ENVIRONMENT:gcp" \
         --cluster1 "mongodb://clusterAdmin:superSecret@clusterTwo01.fancyCorp.com:20020,clusterTwo02.fancyCorp.com:20020,clusterTwo03.fancyCorp.com:20020/?authMechanism=MONGODB-OIDC&authMechanismProperties=ENVIRONMENT:gcp"

Learn More
----------

- :ref:`c2c-mongosync-behavior`
- :ref:`c2c-connecting`
- :ref:`c2c-states`
- :ref:`c2c-api`
- :ref:`c2c-cutover-process`
