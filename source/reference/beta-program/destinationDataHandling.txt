.. _c2c-beta-destination-data-handling:

===========================================================
Handle Destination Data with destinationDataHandling Option
===========================================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

.. include:: /includes/destinationDataHandling-introduction.rst

Syntax
------

To enable the ``destinationDataHandling`` option in ``mongosync``:

.. code-block:: shell

   mongosync <options> --enableFeatures destinationDataHandling

For the other ``mongosync`` options, see :ref:`c2c-mongosync`.

To set a string for ``destinationDataHandling``:

.. code-block:: shell
   :emphasize-lines: 5

   curl <host>:<port>/api/v1/start -XPOST \
   --data '
      {
         <options>,
         "destinationDataHandling": <string>
      } '

Command Field
-------------

The following table shows the strings you can set for
``"destinationDataHandling"``:

.. list-table::
   :header-rows: 1
   :widths: 20 80
 
   * - String
     - Description
 
   * - ``"dropAllData"``
     - ``mongosync`` drops existing databases on the destination cluster
       except the ``admin``, ``config``, ``local``, and
       ``mongosync_reserved_for_internal_use`` databases.
       ``"dropAllData"`` requires you have the
       :authrole:`clusterAdmin` or :authrole:`dbAdmin` role.
 
   * - ``"ignorePreExistingData"``
     - ``mongosync`` ignores existing databases on the destination
       cluster. Ensure your destination
       namespaces are different from those ``mongosync`` syncs from the
       source cluster.

If you omit the ``"destinationDataHandling"`` string, and the
destination cluster isn't empty, ``mongosync`` returns an error.
Otherwise, ``mongosync`` continues the sync operation.

Steps
-----

.. procedure::
   :style: normal

   .. step:: Connect source and destination clusters

      The following example connects a source cluster running locally on
      port ``27000`` with a destination cluster running on port
      ``35000``, and enables ``destinationDataHandling``:

      .. code-block:: shell
         :emphasize-lines: 4

         mongosync \
            --cluster0 "mongodb://localhost:27000" \
            --cluster1 "mongodb://localhost:35000" \
            --enableFeatures destinationDataHandling

   .. step:: Set the destinationDataHandling string

      The following example sets the ``"destinationDataHandling"``
      string to ``"dropAllData"`` from ``localhost:27182``:

      .. code-block:: shell
         :emphasize-lines: 6

         curl localhost:27182/api/v1/start -XPOST \
         --data '
            {
               "source": "cluster0",
               "destination": "cluster1",
               "destinationDataHandling": "dropAllData"
            } '

      The sync operation continues.

Learn More
----------

- :ref:`c2c-quickstart`
- :ref:`c2c-sharded-clusters`
